spring.application.name=Customer
server.port=8081

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=MySecretpassword
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true

#bank-service.url=http://localhost:8080

resilience4j.circuitbreaker.instances.createAccountCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.createAccountCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.createAccountCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.createAccountCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.createAccountCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3

spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:/db/changelog-master.yaml

logging.level.org.springframework.security=TRACE

# GitHub Login
#spring.security.oauth2.client.registration.github.client-id=Ov23liwAHNIH1W6W6KXi
#spring.security.oauth2.client.registration.github.client-secret=7ba9684f60e477757b5e45283e567f92d4086c50
#spring.security.oauth2.client.registration.github.scope=userMongo:email

# Basic Spring Security & it worked without any configuration file in postman (basic auth).
#spring.security.userMongo.name=admin
#spring.security.userMongo.password=Manish@543678910-kI
#spring.security.userMongo.roles=admin

# MongoDB Configuration (works in both the below ways)
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=Customer
spring.data.mongodb.uri=mongodb://localhost:27017/Customer